<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/24/hello-world/"/>
      <url>/2022/04/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2021/10/30/%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/"/>
      <url>/2021/10/30/%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="keyword">static</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;code test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客的具体步骤</title>
      <link href="/2021/09/30/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4/"/>
      <url>/2021/09/30/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo搭建个人博客的具体步骤"><a href="#Hexo搭建个人博客的具体步骤" class="headerlink" title="Hexo搭建个人博客的具体步骤"></a>Hexo搭建个人博客的具体步骤</h1><h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><h3 id="1、安装-nodejs"><a href="#1、安装-nodejs" class="headerlink" title="1、安装 nodejs"></a>1、安装 nodejs</h3><p>官网 <a href="https://nodejs.org/zh-cn/">Node.js (nodejs.org)</a></p><p> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</p><p>安装完 node 后， npm也已经安装好，使用 npm 命令进行安装操作。</p><h3 id="2、安装-cnpm"><a href="#2、安装-cnpm" class="headerlink" title="2、安装 cnpm"></a>2、安装 cnpm</h3><p>安装淘宝镜像源</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>安装后验证</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><h3 id="3、安装-hexo"><a href="#3、安装-hexo" class="headerlink" title="3、安装 hexo"></a>3、安装 hexo</h3><p>使用命令行安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者</span></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成后可以通过以下命令校验：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h3 id="4、安装-Git"><a href="#4、安装-Git" class="headerlink" title="4、安装 Git"></a>4、安装 Git</h3><p>官网 <a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a></p><p>淘宝镜像<a href="https://npm.taobao.org/mirrors/git-for-windows/">CNPM Binaries Mirror (npmmirror.com)</a></p><p>安装后验证</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h3 id="5、Git-设置-SSH-免密登录"><a href="#5、Git-设置-SSH-免密登录" class="headerlink" title="5、Git 设置 SSH 免密登录"></a>5、Git 设置 SSH 免密登录</h3><blockquote><p>因为直接使用 用户名 和 密码不安全</p></blockquote><p>操作步骤：</p><ul><li>将本机上的相关配置文件删除，将  <code>c:\User\当前用户名\.ssh</code>  文件夹删除</li><li>在任何地方右键打开 <code>Git Bash Here</code> ， 输入 <code>ssh-keygen -t rsa -C github邮箱地址</code> 生成 .ssh 秘钥，然后输入三次回车，即可，会在  <code>c:\User\当前用户名</code> 文件夹下 生成 <code>.ssh </code> 文件夹</li><li>打开<code>.ssh </code> 文件夹下的 <code>id_rsa.pub</code> 文件，并复制其中的内容</li><li>打开 github 主页，进入个人设置 <code>SSH and GPG keys</code> -&gt;  <code>New SSH key</code> ，把复制的内容粘贴进去，title 随便填写，保存即可</li><li>检测是否设置成功，在 git窗口输入 <code>ssh -T git@github.com</code> ，如果提示 <code>Are you sure you want to continue connecting (yes/no)?</code> ， 输入 yes，然后如果提示 <code>Hi liuxianan! You&#39;ve successfully authenticated, but GitHub does not provide shell access. </code> 泽表示配置成功。</li><li>最后在进行以下配置：<ul><li>git config –global user.name “你的用户名” </li><li>git config –global user.email  “你注册github的邮箱” </li></ul></li></ul><h2 id="二、github-配置"><a href="#二、github-配置" class="headerlink" title="二、github 配置"></a>二、github 配置</h2><h3 id="1、在github-上创建仓库"><a href="#1、在github-上创建仓库" class="headerlink" title="1、在github 上创建仓库"></a>1、在github 上创建仓库</h3><ul><li>新建一个 以 <code>github账户名.github.io</code> 命名的仓库</li><li>全部完成之后，你的博客网站访问地址就是 <code>http://github账户名.github.io</code></li></ul><p><strong>注意</strong>：</p><ul><li>注册的邮箱一定要验证，否则不会成功</li><li>仓库的名字必须是：<code>github账户名.github.io</code></li><li>仓库创建成功后不会立即生效，一般是 10-30 分钟</li></ul><h2 id="三、使用-hexo-搭建博客"><a href="#三、使用-hexo-搭建博客" class="headerlink" title="三、使用 hexo 搭建博客"></a>三、使用 hexo 搭建博客</h2><h3 id="1、初始化环境"><a href="#1、初始化环境" class="headerlink" title="1、初始化环境"></a>1、初始化环境</h3><ol><li>在本机创建文件夹（该文件夹专门用来存放代码的地方）</li><li>在该文件夹下右键打开 <code>Git Bash Here</code> ，输入 <code>hexo init</code> 进行初始化</li><li>执行以下命令，hexo 会在 public 文件夹下生成相关的 html 文件，这些文件需要提交到 github上 <ul><li><code>hexo g</code> 或 <code>hexo generate</code> 生成静态文件</li><li><code>hexo s</code> 或 <code>hexo server</code> 启动服务</li></ul></li><li><code>hexo s </code> 是在本地启动预览服务，浏览器访问 <code>Http://localhost:4000</code> 即可查看内容。</li></ol><p>在创建的文件夹目录下，进入 cmd 命令窗口</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化 hexo</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>生成以下文件夹目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p><strong>启动 hexo</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行启动，会打印出相关信息，访问该路径，即可访问生成的博客</span></span><br><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure><h3 id="2、将博客部署到-github-个人主页上"><a href="#2、将博客部署到-github-个人主页上" class="headerlink" title="2、将博客部署到 github 个人主页上"></a>2、将博客部署到 github 个人主页上</h3><ol><li>在 博客目录下安装 <code>hexo-deployer-git</code> 插件 </li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="2"><li>编辑博客目录下的配置文件 <code>_config.yml</code> 文件</li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在文件末尾添加以下配置信息</span></span><br><span class="line"><span class="comment"># 修改 # Deployment 处的配置信息</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你的github仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将本地博客推送到 github 仓库</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>推送成功后，在浏览器输入相对应的域名即可访问。</p><h3 id="3、更换主题"><a href="#3、更换主题" class="headerlink" title="3、更换主题"></a>3、更换主题</h3><h4 id="1-寻找主题"><a href="#1-寻找主题" class="headerlink" title="1.寻找主题"></a>1.寻找主题</h4><p>官方主题 <a href="https://hexo.io/themes/">Themes | Hexo</a></p><p>可以直接在主题官网下载，也可以点击主题名，跳转到 github 上下载，也可以直接在 github 上搜索主题。</p><p>推荐</p><ul><li>hexo-theme-matery <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">压缩包下载</a></li></ul><h4 id="2-下载主题"><a href="#2-下载主题" class="headerlink" title="2.下载主题"></a>2.下载主题</h4><ul><li>首先进入到本地博客文件夹，右键打开 <code>Git Bash Here</code></li><li>输入命令 <code>git clone 新主题http连接 themes/主题名</code></li></ul><p><strong>注意</strong>：</p><p>在博客目录下的 themes 文件夹下存放的就是博客的主题</p><h4 id="3-使用主题"><a href="#3-使用主题" class="headerlink" title="3.使用主题"></a>3.使用主题</h4><ul><li>打开博客目录下的 <code>_config.yml</code> 文件，修改配置，然后执行 <code>hexo g</code> 重新生成静态文件</li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">yilia</span></span><br></pre></td></tr></table></figure><blockquote><p>如果出现一些莫名其妙的问题可以先执行 <code>hexo clean</code> 来清理一下 public 的内容。然后再执行 <code>hexo g</code> 和 <code>hexo s</code> 重新生成和发布。</p></blockquote><h4 id="4-修改主题内容"><a href="#4-修改主题内容" class="headerlink" title="4.修改主题内容"></a>4.修改主题内容</h4><p>每个主题在 github 上都有相关的操作文档。</p><p>以 <code>blinkfox</code> 主题为例：</p><p>文档链接： <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">blinkfox</a></p><p>注意：</p><ul><li><p>一些非md文件可以把他们放到 source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的</p></li><li><p>大致在下图的文件夹里面修改文件，记得修改后的文件需要关闭后，再在hexocode根目录右键打开Git Bash Here，输入两个命令：hexo g 重新生成，hexo s 开启本地预览服务,等修改的符合要求了，再输入 hexo d 推送到github仓库即可</p></li></ul><p><img src="/./Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4/426b2c5a296d531dcae228493e6d63868179f132.png@942w_353h_progressive.webp" alt="img"></p><p>这样就可以输入网址查看更改后的内容了</p><p>文档中没有提及的修改：</p><ul><li>返回按钮样式修改：在主题下面的 blinkfox\layout_partial 文件夹中的 back-top.esj 文件中修改</li><li>修改生成的默认页面信息，要到主题下面的 <code>_config.yml</code>文件里面去改，而不是根目录下的<code>_config.yml</code>文件</li><li>要把根目录下的<code>_config.yml</code>文件中的这些信息替换成自己的和设置中文 </li></ul><p><img src="/./Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4/9545db7dea8f6d676b15ebe2d5542fec221d22ca.png@942w_191h_progressive.webp" alt="img"></p><p>配置音乐播放器</p><p>​        使用网易云音乐 ID 不行，可以使用 QQ音乐</p><p>配置留言功能（利用 Valine）</p><ul><li><p>我们的评论系统其实是放在<code>Leancloud</code>上的，因此首先需要去注册一个账号</p></li><li><p>注册完以后需要创建一个应用，名字可以随便起，然后 进入应用-&gt;设置-&gt;应用key，获取你的<code>appid </code> 和 <code>appkey</code>，复制到主题下面的 <code>_config.yml</code> 文件里面搜索 valine，填入appid 和 appkey</p></li><li><p>最后！记得在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; <code>Web 安全域名</code> 把你的<code>域名</code>加进去就可以了</p></li><li><p>主题页面显示的内容在主题下面的 <code>layout</code> 文件夹中的 <code>contact.ejs</code> 文件里面更改</p></li></ul><h2 id="四、编写博客"><a href="#四、编写博客" class="headerlink" title="四、编写博客"></a>四、编写博客</h2><h3 id="1、使用-Typora-编写博客"><a href="#1、使用-Typora-编写博客" class="headerlink" title="1、使用 Typora 编写博客"></a>1、使用 Typora 编写博客</h3><p>Markdown教程：<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程</a></p><h3 id="2、写博客的步骤"><a href="#2、写博客的步骤" class="headerlink" title="2、写博客的步骤"></a>2、写博客的步骤</h3><p>第一步：创建 .md 文件</p><ul><li>方法一：<ul><li>在博客文件夹的根目录，在 <code>Git Bash Here</code> 中执行命令： <code>hexo new &#39;文件名&#39;</code> ，hexo 会自动帮我们在 <code>source\_posts</code> 文件夹下生成相应的 .md 文件。通过命令生成的文件自动帮我们生成了时间。</li></ul></li><li>方法二：<ul><li>在 <code>source\_posts</code> 文件夹下新建 .md 文件</li></ul></li></ul><p>第二步： 编写并保存</p><p>第三步：清理然后重新生成，将生成的文件推送到远程仓库即可。命令执行如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><blockquote><p>补充：hexo new page ‘postName’命令和hexo new ‘postName’的区别？</p><p>hexo new page ‘My-second-blog’最终部署时生成：hexo\public\my-second-blog\index.html，但是它不会作为文章出现在博文目录.</p></blockquote><h3 id="3、向博客中插入图片"><a href="#3、向博客中插入图片" class="headerlink" title="3、向博客中插入图片"></a>3、向博客中插入图片</h3><p>​        在hexo 中使用文章资源文件夹需要在 <code>config.yaml</code> 文件中更改一下配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>​        当该配置被应用后，使用hexo new命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。 </p><p>​        由于项目会生成新的文件目录，同时会解析Markdown中的图片路径，会导致一个问题。</p><p>​        如在一个文件目录下，博客名为1.md，相应的存在一个1文件夹存放图片image.jpg。在Typora编辑器中，普通的md文件使用 <code>![](1/image.jpg)</code> 能在编辑器中正常显示图片。</p><p>在hexo中，按理说应该是使用 <code>![](1/image.jpg)</code> ，但网页中却无法正常显示。此时应该使用这样的方式来引入图片：<code>&#123;% asset_img image.jpg 这是一张图片 %&#125;</code></p><p>​        虽然可以正常引用图片了，但是这种引用图片的方式实在是不方便。</p><p>使用 <code>hexo-renderer-marked</code> 插件解决这个问题！！！</p><ol><li>安装 <code>hexo-renderer-marked</code> 插件</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-marked --save </span><br></pre></td></tr></table></figure><ol start="2"><li>修改配置文件 <code>config.yaml</code> </li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>​        之后就可以在使用 <code>![](image.jpg)</code>  的方式愉快的插入图片了。</p><p>还可以进一步设置：</p><p>在 <code>Typora</code> 文件-&gt;偏好设置或者直接&lt;C-,&gt;进入设置。</p><p>复制网络路径的图片：</p><p><img src="/./Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4/image-20220423175812236.png" alt="image-20220423175812236"></p><p>使用该配置后，可以直接复制网页中的图片地址，粘贴到Typora中后，会直接复制该图片到文章资源文件夹，同时自动更改路径。</p><p>但我们知道部署后，文件路径是不同的，所以当我们插入完所有的图片后，我们还需要删除每个图片路径中的文件名/。</p><p>在Typora编辑器中，使用<C-f>快捷键，将所有的文章名/替换为空即可删除。</p><p>然后再将博客上传，图片就会随着文章一起打包。在网页中就可以看到正常显示的图片，大功告成。</p><h2 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h2><h3 id="1、绑定域名"><a href="#1、绑定域名" class="headerlink" title="1、绑定域名"></a>1、绑定域名</h3><p>首先注册一个域名，可以到阿里云或者腾讯云。</p><p>绑定域名分为 2 种：</p><ul><li>带 www 的</li><li>不带 www 的</li></ul><p>域名配置最常见的有 2 种方式：</p><ul><li>CNAME<ul><li>CNAME 填写域名</li></ul></li><li>A记录<ul><li>A记录填写 IP </li></ul></li></ul><p>​        由于不带 www 方式只能采用 A记录的方式，所以必须先 ping 以下你的 <code>github账户名.github.io</code> 的 IP ，然后到你的域名 DNS 设置页面，将 A 记录指向你 ping 出来的 IP 地址，将 CNAME 指向你的 <code>github账户名.github.io</code> ，这样可以保证无论是否添加 www 都可以访问。</p><p>​        然后到你的 github 项目根目录下创建一个名为 CNAME 的文件（无后缀名），里面填写你的域名，加不加 www 都可以。</p><ul><li>如果你填写的是没有加 www 的，比如： mygit.com 那么无论是访问 <code>http://mygit.com</code> 还是 <code>http://www.mygit.com</code> 都会转到 <code>http://mygit.com</code></li><li>如果是填写的是带 www 的，比如： <code>www.mygit.com</code> ，那么无论是访问 <code>http://www.mygit.com</code> 还是 <code>http://mygit.com</code> 都会跳转到 <code>http:.//www.mygit.com</code> </li><li>如果你填写的是其他子域名，比如：<code>abc.mygit.com</code> ，那么访问 <code>http://abc.mygit.com</code> 没问题，但是访问 <code>http://mygit.com</code> 不会自动跳转到 <code>http://abc.mygit.com</code></li><li>此外： 在你绑定了新域名后，原来的 <code>http://github账户名.github.io</code> 并没有失效，而会自动跳转到你的新域名。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
